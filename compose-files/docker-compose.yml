version: "3.2"

services:
  ### nginx
  #nginx:
  #  image: nginx
  #  depends_on:
  #   - s3-storage
  #  volumes:
  #    - ../nginx:/etc/nginx/:ro
  #  ports:
  #    - 8081:80
  #  networks:
  #    - storage
  #    - default

  ###

  ### Schul-Cloud Server
  ###
  mongodb-primary:
    image: mongo:5.0.26 ## change tag in version.env
    container_name: mongodb-primary
    ports:
      - "27017:27017"
    volumes:
      - data-mongodb-primary:/data/db
    depends_on:
      - mongodb-secondary
      - mongodb-arbiter
    restart: unless-stopped
    command: --bind_ip_all --replSet rs0

  mongodb-secondary:
    image: mongo:5.0.26 ## change tag in version.env
    container_name: mongodb-secondary
    ports:
      - "27017"
      - "27018:27017"
    volumes:
      - data-mongodb-secondary:/data/db
    restart: unless-stopped
    command: --bind_ip_all --replSet rs0

  mongodb-arbiter:
    image: mongo:5.0.26 ## change tag in version.env
    container_name: mongodb-arbiter
    ports:
      - "27017"
      - "27019:27017"
    volumes:
      - data-mongodb-arbiter:/data/db
    restart: unless-stopped
    command: --bind_ip_all --replSet rs0

  mongosetup:
    image: mongo:5.0.26
    depends_on:
      - mongodb-primary
      - mongodb-secondary
      - mongodb-arbiter
    volumes:
      - ../scripts/mongo_setup.sh:/scripts/mongo_setup.sh
    restart: "no"
    entrypoint: ["bash", "/scripts/mongo_setup.sh"]

  redis:
    image: redis:${REDIS_DOCKER_TAG:-latest} ## change tag in version.env
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    restart: unless-stopped

  rabbit:
    image: rabbitmq:3.8.9-management
    container_name: rabbit
    ports:
      - "5672:5672"
      - "15672:15672"

  ### Schul-Cloud Calendar
  ###
  calendar-postgres:
    image: postgres:${POSTGRES_DOCKER_TAG:-latest}
    depends_on:
      - calendar-init
    ports:
      - "5432:5432"
    volumes:
      - "data-calendar-postgres:/var/lib/postgresql/data"
      - "postgres-init:/docker-entrypoint-initdb.d"
    environment:
      - POSTGRES_DB=schulcloud_calendar
      - POSTGRES_USER=node
      - POSTGRES_PASSWORD=genericpassword
    restart: unless-stopped
    #command: ls /docker-entrypoint-initdb.d

  mailcatcher:
    image: schickling/mailcatcher
    ports:
      - 1080:1080
      - 1025:1025
  maildrop:
    image: ghcr.io/kaffeekrone/mail-drop:1.0
    depends_on:
      - mailcatcher
      - rabbit
    environment:
      - SPRING_MAIL_HOST=mailcatcher
      - SPRING_MAIL_PORT=1025
      - SPRING_MAIL_USERNAME=guest
      - SPRING_RABBITMQ_HOST=rabbit

  server:
    image: ghcr.io/hpi-schul-cloud/schulcloud-server:${SERVER_DOCKER_TAG}
    container_name: schulcloud-server
    build:
      context: ${SERVER_PATH}
      dockerfile: Dockerfile
      # cache_from:
      #   - schulcloud/schulcloud-server:latest
    depends_on:
      - mongosetup
      - redis
      - rabbit
      - calendar
    environment:
      # ENV
      - EXIT_ON_ERROR=false
      - NODE_ENV=${NODE_ENV:-development}
      - HOST=http://localhost:3030
      - SC_DOMAIN=localhost
      - SC_TITLE=HPI Schulcloud
      - SC_SHORT_TITLE=Schulcloud
      # ENV new file service - please not no minio is deployed but env must be set, they are required
      - FILES_STORAGE__INCOMING_REQUEST_TIMEOUT=6000000
      - FILES_STORAGE__SERVICE_BASE_URL=http://localhost:4444
      - FILES_STORAGE__S3_ENDPOINT=http://localhost:9000
      - FILES_STORAGE__S3_ACCESS_KEY_ID=miniouser
      - FILES_STORAGE__S3_SECRET_ACCESS_KEY=miniouser
      - FILES_STORAGE__S3_BUCKET=schulcloud
      - FILES_STORAGE__S3_REGION=eu-central-1
      - CLAMAV__SERVICE_HOSTNAME=localhost
      - CLAMAV__SERVICE_PORT=3310
      # ENV for new side menu
      - FEATURE_NEW_LAYOUT_ENABLED=true
      # URIs and Port
      - DB_URL=mongodb://mongodb-primary:27017,mongodb-secondary:27017,mongodb-arbiter:27017/schulcloud?replicaSet=rs0&tls=false
      - REDIS_URI=redis://redis:6379
      - RABBITMQ_URI=amqp://guest:guest@rabbit:5672
      - CONTENT_URI=https://consent.schul-cloud.org #lernstore
      - PORT=3030
      # AUTH Secret
      - AES_KEY=fortestingonly12
      # - AUTHENTICATION=
      - IGNORE_DISCOVERABILITY=true
      # Brute force protection
      - LOGIN_BLOCK_TIME=3
      # Edu-Sharing
      - ES_DOMAIN=https://mv-repo.schul-cloud.org
      - ES_USER={ES_USER}
      - ES_PASSWORD={ES_PASSWORD}
      - SECRET_ES_MERLIN_USERNAME={SECRET_ES_MERLIN_USERNAME}
      - SECRET_ES_MERLIN_PW={SECRET_ES_MERLIN_PW}
      # FEATURE TOGGLES
      - LERNSTORE_MODE=EDUSHARING
      - CALENDAR_URI=http://calendar:3000
      - CALENDAR_API_KEY=test123
      - S3_KEY=abcdefghijklmnop
      - PUBLIC_BACKEND_URL=http://server:3030/api
      # ETHERPAD
      - ETHERPAD__PAD_URI=http://localhost:9001/p
    ports:
      - "3030:3030"
    networks:
      - storage
      - default
    restart: unless-stopped
  server-management:
    # should match server except port, container_name and command
    image: ghcr.io/hpi-schul-cloud/schulcloud-server:${SERVER_DOCKER_TAG}
    container_name: schulcloud-server-management
    build:
      context: ${SERVER_PATH}
      dockerfile: Dockerfile
      # cache_from:
      #   - schulcloud/schulcloud-server:latest
    depends_on:
      - mongosetup
      - redis
      - rabbit
      - calendar
    command: npm run nest:start:management
    environment:
      # ENV
      - NODE_ENV=${NODE_ENV:-development}
      - HOST=http://localhost:3333
      - SC_DOMAIN=localhost
      - SC_TITLE=HPI Schulcloud
      - SC_SHORT_TITLE=Schulcloud
      # ENV new file service - please not no minio is deployed but env must be set, they are required
      - FILES_STORAGE__INCOMING_REQUEST_TIMEOUT=6000000
      - FILES_STORAGE__SERVICE_BASE_URL=http://localhost:4444
      - FILES_STORAGE__S3_ENDPOINT=http://localhost:9000
      - FILES_STORAGE__S3_ACCESS_KEY_ID=miniouser
      - FILES_STORAGE__S3_SECRET_ACCESS_KEY=miniouser
      - FILES_STORAGE__S3_BUCKET=schulcloud
      - FILES_STORAGE__S3_REGION=eu-central-1
      # URIs and Port
      - DB_URL=mongodb://mongodb-primary:27017,mongodb-secondary:27017,mongodb-arbiter:27017/schulcloud?replicaSet=rs0&tls=false
      - REDIS_URI=redis://redis:6379
      - RABBITMQ_URI=amqp://guest:guest@rabbit:5672
      - CONTENT_URI=https://consent.schul-cloud.org #lernstore
      - PORT=3333 # will be 3333 anyways
      # AUTH Secret
      - AES_KEY=fortestingonly12
      # - AUTHENTICATION=
      - IGNORE_DISCOVERABILITY=true
      # Brute force protection
      - LOGIN_BLOCK_TIME=3
      # Edu-Sharing
      - ES_DOMAIN=https://mv-repo.schul-cloud.org
      - ES_USER={ES_USER}
      - ES_PASSWORD={ES_PASSWORD}
      - SECRET_ES_MERLIN_USERNAME={SECRET_ES_MERLIN_USERNAME}
      - SECRET_ES_MERLIN_PW={SECRET_ES_MERLIN_PW}
      # FEATURE TOGGLES
      - LERNSTORE_MODE=EDUSHARING
      - CALENDAR_URI=http://calendar:3000
      - CALENDAR_API_KEY=test123
      - S3_KEY=abcdefghijklmnop
      # fwu learning contents
      - FWU_CONTENT__S3_ENDPOINT=http://localhost:4568
      - FWU_CONTENT__S3_ACCESS_KEY=S3RVER
      - FWU_CONTENT__S3_SECRET_KEY=S3RVER
      - FWU_CONTENT__S3_BUCKET=fwu-content
      - FWU_CONTENT__S3_REGION=eu-central-1
       # ETHERPAD
      - ETHERPAD__PAD_URI=http://localhost:9001/p
    ports:
      - "3333:3333"
    networks:
      - storage
      - default
    restart: unless-stopped

  ###
  ### Schul-Cloud Client
  ###
  client:
    image: ghcr.io/hpi-schul-cloud/schulcloud-client-default:${CLIENT_DOCKER_TAG}
    build:
      context: ${CLIENT_PATH}
      dockerfile: Dockerfile
    depends_on:
      - server
    environment:
      # ENV
      #- TZ=Europe/Berlin
      # Theme and Titles
      - SC_THEME=default
      - SC_TITLE=HPI Schulcloud
      - SC_SHORT_TITLE=Schulcloud
      - SC_PRODUCTNAME=Hauptschule
      - SC_FEDERALSTATE=mainstate
      - CALENDAR_SERVICE_ENABLED=true
      - REDIS_URI=redis://redis:6379
      # ENV for new side menu
      - FEATURE_NEW_LAYOUT_ENABLED=true
      # Google
      #- GOOGLE_ANALYTICS_TRACKING_ID="UA-155982548-1"
      # URIs
      - HOST=http://localhost:3100
      - API_HOST=http://server:3030/api
      - PUBLIC_BACKEND_URL=http://server:3030/api
      #- LIBRE_OFFICE_CLIENT_URL=http://localhost:9980
      # FEATURE TOGGLES
      - FEATURE_TEAMS_ENABLED=true
      - FEATURE_EXTENSIONS_ENABLED=true
      - LERNSTORE_MODE=EDUSHARING
      #- EDTR_SOURCE=https://cdn.jsdelivr.net/gh/schul-cloud/edtrio@e9d3bb9d66092bafa07846269c8fc6f9d5fb0559/dist/index.js
      # BRUTE FORCE PROTECTION
      - LOGIN_BLOCK_TIME=3
    ports:
      - "3100:3100"
    restart: unless-stopped
  ###

  nuxtclient:
    image: ghcr.io/hpi-schul-cloud/nuxt-client-default:${NUXT_DOCKER_TAG}
    build:
      context: ${NUXT_PATH}
      dockerfile: Dockerfile.client
    depends_on:
      - server
      - client
    environment:
      # ENV
      - NODE_ENV=${NODE_ENV:-development}
      - TZ=Europe/Berlin
      - LEGACY_CLIENT_URL=http://client:3100
      - HOST=0.0.0.0
      - API_URL=${API_URL:-http://server:3030/api}
      - H5P_FRAME_SRC_URLS=https://www.website.com
      - H5P_SCRIPT_SRC_URLS=https://www.website.com
      - H5P_IMG_SRC_URLS=https://www.website.com
      # FEATURE TOGGLES
      - FEATURE_TEAMS_ENABLED=true
      - LERNSTORE_MODE=EDUSHARING
      # Theme and Titles
      - SC_THEME=default
    ports:
      - "4000:4000"
    restart: unless-stopped

  calendar:
    image: schulcloud/schulcloud-calendar:${CALENDAR_DOCKER_TAG:-develop_latest}
    build:
      context: ${CALENDAR_PATH:-.keep_empty}
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - calendar-postgres
    environment:
      - API_KEY=test123
      # ENV
      - NODE_ENV=production
      # DB Credentials
      - DB_PASSWORD=genericpassword
      - DB_HOST=calendar-postgres
      - DB_USERNAME=node
      - DB_DATABASE=schulcloud_calendar
      # Paths
      - SCHULCLOUD_BASE_PATH=http://server:3030/api/v1
      - NOTIFICATION_SERVICE_BASE_PATH=http://notification-service:3040
      - NOTIFICATION_SERVICE_NEW_NOTIFICATION=http://notification-service:3040/messages
    restart: unless-stopped
    command: npm start

  calendar-init:
    image: schulcloud/schulcloud-calendar:${CALENDAR_DOCKER_TAG:-develop_latest}
    build:
      context: ${CALENDAR_PATH:-.keep_empty}
      dockerfile: Dockerfile
    init: true
    volumes:
      - "postgres-init:/docker-entrypoint-initdb.d"
    command: /bin/sh -c 'cp schema.sql /docker-entrypoint-initdb.d/01-schema.sql && cp example_data.sql /docker-entrypoint-initdb.d/02-data.sql'

  selenium-hub:
    image: selenium/hub:4.7.2
    container_name: selenium-hub
    ports:
      - "4442:4442"
      - "4443:4443"
      - "4444:4444"
  chrome:
    image: selenium/node-chrome:4.7.2
    volumes:
      - /dev/shm:/dev/shm
    depends_on:
      - selenium-hub
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443

  ###
networks:
  storage:
    ipam:
      driver: default
      config:
        - subnet: "172.16.13.0/24"

volumes:
  data-mongodb-primary:
  data-mongodb-secondary:
  data-mongodb-arbiter:
  data-calendar-postgres:
  postgres-init:
  db-data:
